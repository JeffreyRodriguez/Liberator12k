FRAME_COUNT=100
FRAMES=$(shell seq 0 $(FRAME_COUNT))
SLOW_FRAME_COUNT=300
SLOW_FRAMES=$(shell seq 0 $(SLOW_FRAME_COUNT))
MDBIN=cmark-gfm -e table --unsafe
OSBIN=nice openscad
OSOPTS=--hardwarnings --colorscheme=Nature 
OS_CAM_AUTO=--projection=p --autocenter --viewall
GIT_VERSION=$(shell git describe --always)
DATE=$(shell date +'%Y-%m-%d')
SUBDIRS := $(dir $(wildcard */Makefile))

.DEFAULT_GOAL := all
.PHONY: FORCE $(SUBDIRS) clean clean-dir
.PRECIOUS: .frames/%.mp4
	
$(SUBDIRS): FORCE
	$(MAKE) -C $@

define list_parts
	$(shell grep -oP 'if \(_RENDER == "([\w_]+)"\)' $(1) | cut -d\" -f 2)
endef

Assembly/:
	mkdir -p Assembly

#Assembly/*.stl:
%.png %.stl:
	$(eval NAME=$(subst Assembly/, ,$(basename $@)))
	$(eval CLASS_PRESET=$(firstword $(subst /, ,$(NAME))))
	$(eval CLASS=$(shell echo $(CLASS_PRESET) | awk -F _ '{ print $$1 }'))
	$(eval PRESET=$(shell echo $(CLASS_PRESET) | awk -F _ '{ print $$2 }'))
	$(eval PART=$(basename $(notdir $@)))
	$(eval RENDER_PRINT=$(if $(findstring Assembly/,$@),false,true) )
	$(eval RENDER_MODE=$(if $(findstring Assembly.png,$@),--preview,--render) )
	@echo Target: $@
	@echo Target Dir: $(dir $@)
	@echo Deps: $^
	@echo Name: $(NAME)
	@echo Class_Preset: $(CLASS_PRESET)
	@echo Class: $(CLASS)
	@echo Preset: $(PRESET)
	@echo Part: $(PART)
	@echo Render for Print: $(RENDER_PRINT)
	@echo Render Mode: $(RENDER_MODE)
	mkdir -p $(dir $@) && \
	$(OSBIN) $(OSOPTS) -o $@ -o $(basename $@).png \
		$(RENDER_MODE) --projection=p --autocenter --viewall --view scales \
		$(if $(PRESET),-p $(CLASS).json -P $(PRESET),) \
		-D _RENDER=\"$(PART)\" \
		-D _RENDER_PRINT=$(RENDER_PRINT)\
		$(CLASS).scad

%.stl.mp4:
	$(eval PART=$(basename $(notdir $@)))
	$(eval FRAMES_DIR=$(basename $@)_frames)
	$(eval STL=$(notdir $(basename $@)))
	mkdir -p $(FRAMES_DIR)
	echo "rotate([0,0,360*\$$t]) import(\"../$(STL)\");" > $(FRAMES_DIR)/Spin.scad
	for i in `seq 0 $(SLOW_FRAME_COUNT)`; do \
	  echo openscad --imgsize=1920,1080 --quiet \
		  -o `printf '$(FRAMES_DIR)/frame%05d.png' $$i` \
		  -D \'\$$t=1/$(SLOW_FRAME_COUNT)*$$i\' \
			--projection=p --camera=0,500,600,0,0,100 \
			$(FRAMES_DIR)/Spin.scad; \
  done | nice parallel
	nice ffmpeg -y -loglevel quiet \
		-i "$(FRAMES_DIR)/frame%05d.png" -framerate 10 \
		-s:v 640:360 -c:v libx264 -crf 20 -pix_fmt yuv420p \
		"$@"
	rm -rf $(FRAMES_DIR)
	
%_thumb.jpg: %.png
	convert -thumbnail 500 $< $@

%.jpg: %.png
	convert $(basename $@).png -quality 90 $@

%.html: %.md
	$(MDBIN) $(basename $@).md \
	  | sed 's/<table>/<table border="1">/g' \
	  | sed 's/.md/.html/' > $@

clean: FORCE clean-dir
	for DIR in $(SUBDIRS); do \
	  $(MAKE) -C $$DIR clean clean-dir; \
	done
	