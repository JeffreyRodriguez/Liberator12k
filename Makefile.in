ifndef MAKEFILE_IN
SHELL := bash
.SHELLFLAGS := -eu -o pipefail -c
MAKEFLAGS += --warn-undefined-variables
MAKEFLAGS += --no-builtin-rules
.ONESHELL:
.DELETE_ON_ERROR:
MAKEFILE_IN=true

FRAME_COUNT:=100
FRAMES:=$(shell seq 0 $(FRAME_COUNT))
SLOW_FRAME_COUNT:=300
SLOW_FRAMES:=$(shell seq 0 $(SLOW_FRAME_COUNT))
MDBIN:=cmark-gfm -e table --unsafe
OSBIN:=nice openscad
OSOPTS:=--hardwarnings --check-parameters=true --check-parameter-ranges=true --colorscheme=Nature
OS_RES_LOW:=1920,1080
OS_RES_HIGH:=4096,2160
OS_CAM_STL:=--autocenter --viewall --view scales
OS_CAM_ASSEMBLY:=--camera=200,1200,200,50,0,0
GIT_VERSION:=$(shell git describe --always)
GIT_DATE:=$(shell git log -1 --date=format:"%Y-%m-%d" --format="%ad")
DATE:=$(shell date +'%Y-%m-%d')
SUBDIRS:= $(filter-out Liberator12k-source/,$(dir $(wildcard */Makefile)))
SCADS:= $(wildcard *.scad)

EXPORT_DIR:=.export
ASSEMBLY_DIR:=.assembly
VIEWS_DIR:=.views
BUILD_DIR:=.build

# Utility vars for subst
comma:= ,
empty:=
space:= $(empty) $(empty)
define \n


endef

.DEFAULT_GOAL:= all
.PHONY: FORCE $(SUBDIRS) clean clean-dir
.PRECIOUS: .frames/%.mp4 %.png

$(SUBDIRS): FORCE
	$(MAKE) -C $@

# OpenSCAD helpers
list_renders    = $(shell grep -oP '_RENDER +== +"(.+)"' '$(strip $(1))' | cut -d \" -f 2 | sort)
filter_renders  = $(filter $(2),$(call list_renders,$(1)))
list_prints     = $(call filter_renders,$(1),Prints/%)
list_hardware   = $(call filter_renders,$(1),Hardware/%)
list_fixtures   = $(call filter_renders,$(1),Fixtures/%)
list_projections = $(call filter_renders,$(1),Projections/%)

# Filename-to-render Conventions:
# Assembly/Class_Preset.png
# Assembly/Class_Preset/Prints/Part.png
# Assembly/Class_Preset/Prints/Part.stl
# Class_Preset.png
# Class_Preset/Prints/Part.png
# Class_Preset/Prints/Part.stl
# Class_Preset/Projections/Name.dxf
render_name         = $(pasubst .%/,,$(basename $(1)))
render_name         = $(subst $(EXPORT_DIR)/,,$(subst $(ASSEMBLY_DIR)/,,$(basename $(1))))
render_class_preset = $(firstword $(subst /, ,$(call render_name,$(1))))
render_class        = $(shell echo $(call render_class_preset,$(1)) | awk -F _ '{ print $$1 }')
render_preset       = $(shell echo $(call render_class_preset,$(1)) | awk -F _ '{ print $$2 }')
render_part         = $(subst $(call render_class_preset,$(1))/,,$(call render_name,$(1)))
render_source       = $(addsuffix .scad, $(call render_class,$(1)))

preset_class_name = $(shell echo $(1) | awk -F _ '{ print $$1 }')

# Extract the // POV entry
scad_pov          = $(shell grep '// POV ' $(1) | awk '{ print $$3 }')
scad_view         = $(shell awk '{ print "-D ",$$1 }' $(basename $(1)).view)

clean: FORCE clean-dir
	for DIR in $(SUBDIRS); do \
	  $(MAKE) -C $$DIR clean clean-dir; \
	done
endif
