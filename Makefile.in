FRAME_COUNT=100
FRAMES=$(shell seq 0 $(FRAME_COUNT))
SLOW_FRAME_COUNT=300
SLOW_FRAMES=$(shell seq 0 $(SLOW_FRAME_COUNT))
MDBIN=cmark-gfm -e table --unsafe
OSBIN=nice openscad
OSOPTS=--hardwarnings --colorscheme=Nature 
OS_CAM_AUTO=--projection=p --autocenter --viewall
GIT_VERSION=$(shell git describe --always)
DATE=$(shell date +'%Y-%m-%d')
SUBDIRS := $(dir $(wildcard */Makefile))

.DEFAULT_GOAL := all
.PHONY: FORCE $(SUBDIRS) clean clean-dir
.PRECIOUS: .frames/%.mp4
	
$(SUBDIRS): FORCE
	$(MAKE) -C $@

%.stl.mp4:
	$(eval PART=$(basename $(notdir $@)))
	$(eval FRAMES_DIR=$(basename $@)_frames)
	$(eval STL=$(notdir $(basename $@)))
	mkdir -p $(FRAMES_DIR)
	echo "rotate([0,0,360*\$$t]) import(\"../$(STL)\");" > $(FRAMES_DIR)/Spin.scad
	for i in `seq 0 $(SLOW_FRAME_COUNT)`; do \
	  echo openscad --imgsize=1920,1080 --quiet \
		  -o `printf '$(FRAMES_DIR)/frame%05d.png' $$i` \
		  -D \'\$$t=1/$(SLOW_FRAME_COUNT)*$$i\' \
			--projection=p --camera=0,500,600,0,0,100 \
			$(FRAMES_DIR)/Spin.scad; \
  done | nice parallel
	nice ffmpeg -y -loglevel quiet \
		-i "$(FRAMES_DIR)/frame%05d.png" -framerate 10 \
		-s:v 640:360 -c:v libx264 -crf 20 -pix_fmt yuv420p \
		"$@"
	rm -rf $(FRAMES_DIR)
	
%_thumb.jpg: %.png
	convert -thumbnail 500 $< $@

%.jpg: %.png
	convert $(basename $@).png -quality 90 $@

%.html: %.md
	$(MDBIN) $(basename $@).md \
	  | sed 's/<table>/<table border="1">/g' \
	  | sed 's/.md/.html/' > $@

%.png %.stl: %.scad
	$(eval PART=$(basename $(notdir $@)))
	$(OSBIN) $(OSOPTS) -o $(basename $@).stl -o $(basename $@).png \
	--render -D _RENDER=\"$(PART)\" \
	--projection=p --autocenter --viewall --view scales \
	$<

%.png %.stl:
	$(eval PART=$(basename $(notdir $@)))
	$(eval SOURCE=$(shell echo $@ | awk -F _ '{ print $$1 }'))
	$(OSBIN) $(OSOPTS) -o $(basename $@).stl -o $(basename $@).png \
	--render -D _RENDER=\"$(PART)\" \
	--projection=p --autocenter --viewall --view scales \
	$(SOURCE).scad

Assembly/:
	mkdir -p Assembly

Assembly/%.stl: Assembly/%.scad Assembly/
	$(eval PART=$(basename $(notdir $@)))
	$(OSBIN) $(OSOPTS) -o $@ \
	--render -D _RENDER=\"$(PART)\"  -D _RENDER_PRINT=false \
	--projection=p --autocenter --viewall --view scales \
	$(basename $(notdir $<)).scad

Assembly/%.stl:  Assembly/
	$(eval PART=$(basename $(notdir $@)))
	$(eval SOURCE=$(shell echo $(notdir $(basename $@)) | awk -F _ '{ print $$1 }'))
	$(OSBIN) $(OSOPTS) -o $@ \
	--render -D _RENDER=\"$(PART)\" -D _RENDER_PRINT=false \
	--projection=p --autocenter --viewall --view scales \
	$(SOURCE).scad

clean: FORCE clean-dir
	for DIR in $(SUBDIRS); do \
	  $(MAKE) -C $$DIR clean; \
	done
	