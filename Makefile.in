FRAME_COUNT=100
FRAMES=$(shell seq 0 $(FRAME_COUNT))
SLOW_FRAME_COUNT=300
SLOW_FRAMES=$(shell seq 0 $(SLOW_FRAME_COUNT))
MDBIN=cmark-gfm -e table --unsafe
OSBIN=nice openscad
OSOPTS=--colorscheme=Nature
OS_CAM_AUTO=--projection=p --autocenter --viewall
ANIMATE_BIN=./bin/animate.sh
THUMBNAILBIN=convert -thumbnail 200

.DEFAULT_GOAL := all

.PRECIOUS: .frames/%.mp4

%.stl.mp4:
	$(eval PART=$(basename $(notdir $@)))
	$(eval FRAMES_DIR=$(basename $@)_frames)
	$(eval STL=$(notdir $(basename $@)))
	mkdir -p $(FRAMES_DIR)
	echo "rotate([0,0,360*\$$t]) import(\"../$(STL)\");" > $(FRAMES_DIR)/Spin.scad
	for i in `seq 0 $(SLOW_FRAME_COUNT)`; do \
	  echo openscad --imgsize=1920,1080 --quiet \
		  -o `printf '$(FRAMES_DIR)/frame%05d.png' $$i` \
		  -D \'\$$t=1/$(SLOW_FRAME_COUNT)*$$i\' \
			--projection=p --camera=0,500,600,0,0,100 \
			$(FRAMES_DIR)/Spin.scad; \
  done | nice parallel
	nice ffmpeg -y -loglevel quiet \
		-i "$(FRAMES_DIR)/frame%05d.png" -framerate 10 \
		-s:v 640:360 -c:v libx264 -crf 20 -pix_fmt yuv420p \
		"$@"
	rm -rf $(FRAMES_DIR)
	
%.png: %.scad
	$(OSBIN) $(OSOPTS) -o $@ \
	--projection=p --camera 200,1000,200,0,0,0 \
	"$(basename $@).scad"
	
	$(THUMBNAILBIN) $@ $(basename $@)_thumb.jpg

%.html: %.md
	$(MDBIN) $(basename $@).md | sed 's/.md/.html/' > $@

%.stl:
	$(OSBIN) $(OSOPTS) -o $@ -o $(basename $@).png \
	  --render -D _RENDER=\"`echo "$(notdir $@)" | sed 's/.stl$\$///'`\" \
		--projection=p --autocenter --viewall \
		`if [ '$(dir "$@")' != './' ]; then echo -P '$(dir $@)' | sed 's/\/$///'; fi` \
	  `echo $(notdir $@) | sed 's/.stl//' | awk -F _ '{ print $$1 }'`.scad
	$(THUMBNAILBIN) $(basename $@).png $(basename $@)_thumb.jpg

FORCE:
clean: clean_ANIMATE clean_STL cleanGCODE cleanMP4 clean_HTML clean_PNG clean_JPG
	rm -rf dist/
clean_ANIMATE:
	rm -rf .frames
cleanGCODE:
	rm -f *.gcode
clean_STL:
	rm -f *.stl
cleanMP4:
	rm -f *.mp4
clean_HTML:
	rm -f *.html
clean_PNG:
	rm -f *.png
clean_JPG:
	rm -f *.jpg
	